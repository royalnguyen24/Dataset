Using fake instangram data to manipulate date and perform data analysis. 

-- 1. Finding 5 oldest users

SELECT * 
FROM users
ORDER BY created_at
LIMIT 5;

-- 2. Most Popular Registration Date
SELECT 
    DAYNAME(created_at) AS day,
    COUNT(DAYNAME(created_at)) AS total
FROM users
GROUP BY day
ORDER BY total DESC
LIMIT 2;

-- 3. Identify Inactive Users (users with no photos)

SELECT username
FROM users
LEFT JOIN photos
    ON users.id = photos.user_id
WHERE photos.id IS NULL; 

-- 4. Identify most popular photo and user who created it
SELECT 
    username,
    photos.id,
	photos.image_url,
	COUNT(*) AS TOTAL
FROM photos 
INNER JOIN likes 
	ON photos.id=likes.photo_id
INNER JOIN users
	ON photos.user_id=users.id
GROUP BY photos.id
ORDER BY TOTAL DESC
LIMIT 1;

-- 5. average users post

SELECT 
	((SELECT COUNT(*) FROM photos) / (SELECT COUNT(*) FROM users));
	
-- 6. 

SELECT 
	tags.tag_name,
	COUNT(*) AS total
FROM photo_tags
JOIN tags
	ON photo_tags.tag_id=tags.id
GROUP BY tags.id
ORDER BY total DESC
LIMIT 5;

-- 7
SELECT 
	username,
	COUNT(*) AS total_likes
FROM users
INNER JOIN likes
	ON users.id=likes.user_id
GROUP BY users.id
HAVING total_likes = (SELECT COUNT(*) FROM photos);


-- Trigger
DELIMITER $$

CREATE TRIGGER prevent_self_follows
     BEFORE INSERT ON table_name FOR EACH ROW
     BEGIN
	 	IF NEW.follower_id = NEW.followee_id
		THEN SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT: 'YOU CANNOT FOLLOW YOURSELF!';
		END IF;
     END;
$$

DELIMITER ;
